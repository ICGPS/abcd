빈 라이프 사이클과 범위


	1. 컨테이너 초기화
		컨테이너란 BeanFactory : 컨테이너의 인터페이스
		빈 객체의 생성 
		의존 주입 Dependency Injection 
		초기화
	2. 컨테이너 종료
		빈 객체의 소멸
	3. 빈 객체의 라이프 사이클
		1) 객체 생성
			의존 설정
				초기화
					소멸
		1)Instantiation
			빈 인스턴스화 생성
		2) DisposableBean
			의존성 주입
		3) InitializingBean
			빈 초기화
		4)Bean in Use
			빈 사용
		5)Destruction
			빈 소멸
	4. 빈 객체의 초기화와 소멸 : 커스텀 메서드
		1) initMethod
		2) destroyMethod
	4.5 애노테이션
		@PostConstruct 
			초기화 단계시에 호출될 메서드
				메서드 제약 반드시 void 타입 파라미터가 없으며, 예외를 던지면 안 됩니다. 
					애노테이션이 붙은 메서드는 한번만 호출할수있다. 
		@PreDestroy() : 
			소멸 전에 호출될 메서드 (소멸직전에 자동으로 호출되어 정리 작업 등을 수행한다.) 
				메서드 제약 반드시 void 타입 파라미터가 없으며, 예외를 던지면 안 됩니다. 
					애노테이션이 붙은 메서드는 한번만 호출할수있다. 
				ex) 빈이 사용하는 리소스를 해제, 연결닫거나, 캐시를 비우는 ... 작업을 자동으로 수행한다
	5. 빈 객체의 생성과 관리 범위
		@Scope
			singleton : 단일 객체
			prototype : 조회마다 새로운 객체 생성 (스프링 컨테이너 관리 기능에 제한점이 생길 수 있다)
				제한점
					메모리 부하
					의존성 주입 관리의 어려움
					트랜잭션 관리 어려움
					자원 누출 가능성